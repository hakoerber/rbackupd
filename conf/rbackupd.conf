### This is the global configuration file for rbackupd.

### This is the section that specifies all values related to logging.
[logging]
    ### The path to the logfile.
    logfile = /var/log/rbackupd/log

    ### Specifies the loglevel. Available values are:
    ###
    ### quiet - only warnings and errors will be logged
    ### default - default log level
    ### verbose - more information will be logged
    ### debug - debug mode
    ###
    ### Every log level implicitly contains all log levels below.
    loglevel = debug

[rsync]
    ### Specify the absolute path of the rsync executable here if necessary.
    ### Otherwise, the executable will be searched in $PATH.
    #cmd = /usr/bin/rsync

[tasks]
    ### This is the default section. The settings specified here will be applied to
    ### all tasks as long as they are not overwritten in the specific task section.

    ### This specifies whether rsync will create a logfile in the destination
    ### directory. rsync_logfile_name specifies the name of the logfile,
    ### rsync_logfile_format specifies the format of that logfile. See the
    ### documentation for details. Leave it blank to use the default.
    rsync_logfile = True
    rsync_logfile_name = rsync.log
    rsync_logfile_format =

    ### These are the filters applied to the file list by rsync. "filter" is
    ### the most versatile options, "include" and "exclude" are simplified
    ### options that should suffice in most cases. "includefile"/"excludefile"
    ### specify files from which "include" and "exclude" patterns will be read.
    ### Note that the order of these options matter, as the first matching
    ### pattern will be used. The order is the following:
    ### - filter
    ### - include
    ### - includefile
    ### - exclude
    ### - excludefile
    ###
    ### NOTE: The values must not be quoted, they will passed quoted to rsync.
    ###
    ### See the documentation details.
    filters =

    includes =
    includefiles =

    excludes =
    excludefiles =

    ### This states whether the destination directory should be created if it
    ### does not exists already. This is particularly useful when backing up to
    ### a removable device to prevent creating a backup in the usual mountpoint
    ### of this device if it is not currently mounted.
    ###
    ### NOTE: This setting will be ignored for all tasks which have their
    ### destination on a remote host. Remote destination will never be created
    ### and have to exist when the program starts.
    create_destination = False

    ### This specifies whether rsync will cross filesystem boudaries when
    ### creating the backup. Note that rsync treats a "bind" mount to the same
    ### device as being on the same filesystem.
    one_fs = False

    ### These are the arguments that will be passed directly to rsync, so every
    ### argument in rsync(1) can be used. The overall order will be preserved.
    ### ATTENTION:
    ### Only edit these lines if you know what you are doing, otherwise the
    ### creation of backups might fail. At least the --archive/-a options
    ### should be included.
    rsync_args = -aHAXvh --relative --no-implied-dirs

    [[main]]
        ### These are the sources that will be backed up, separated by comma.
        sources = $HOME, /etc/, /usr/local/

        ### This is the destination of the backup.
        ### The following substitutions can be used:
        ### %h: the local hostname
        destination = /srv/rbackupd/%h

        ### This is the remote host where the backup should be stored. If
        ### omitted, localhost is assumed.
        destination_host = 10.127.127.150

        ### The port the ssh server on the destination is listening at.
        ssh_port = 22

        ### The file to use for identication to the remote host.
        identity_file = ~/.ssh/id_rsa

        ### The username to use when connecting to the remote host.
        remote_user = pi

        [[[intervals]]]
            ### This is the interval in which the task will be run. The format
            ### is similar to the one of cron(8), see the documentation for
            ### details.
            daily = 30 0 * * * *
            hourly = 0 * * * * *

        [[[keep]]]
            ### This is the count of backups that will be kept. The deletion of
            ### backups will be done AFTER the creation of new ones, so the
            ### newly created one will be counted, too.
            ### ATTENTION: You must not be set to a negative value or zero.
            daily = 7
            hourly = 24

        [[[age]]]
            ### This is the maximum age of a backup of a specific interval
            ### before it will be deleted. You can specify either minutes (m),
            ### hours (h), weeks (w), days (d) or months(M). Mixing of these is
            ### not supported.
            daily = 1M
            hourly = 24h
